sh -c '
<%= "export https_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

<% case ENV['OPT']  %>
<% when "build" %>
  <%= File.read('ruby-omnibus-build.sh') %>
<% else %>
  <%= File.read('ruby-omnibus-prebuilt.sh') %>
<% end %>

PATH=/opt/chef/bin:$PATH
export PATH

# Add Chef configurations
mkdir -p /etc/chef

if [ ! -f /usr/local/bin/chef-client ]; then
  ln -s /opt/chef/bin/chef-client /usr/local/bin/
fi

<% if client_pem -%>
    cat > /etc/chef/client.pem <<EOP
<%= ::File.read(::File.expand_path(client_pem)) %>
EOP
chmod 0600 /etc/chef/client.pem
<% end -%>

<% if validation_key -%>
    cat > /etc/chef/validation.pem <<EOP
<%= validation_key %>
EOP
chmod 0600 /etc/chef/validation.pem
<% end -%>

<% if encrypted_data_bag_secret -%>
    cat > /etc/chef/encrypted_data_bag_secret <<EOP
<%= encrypted_data_bag_secret %>
EOP
chmod 0600 /etc/chef/encrypted_data_bag_secret
<% end -%>

<% unless trusted_certs.empty? -%>
    mkdir -p /etc/chef/trusted_certs
    <%= trusted_certs %>
<% end -%>

<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
    mkdir -p /etc/chef/ohai/hints

    <% @chef_config[:knife][:hints].each do |name, hash| -%>
        cat > /etc/chef/ohai/hints/<%= name %>.json <<EOP
<%= Chef::JSONCompat.to_json(hash) %>
EOP
    <% end -%>
<% end -%>

cat > /etc/chef/client.rb <<EOP
<%= config_content %>
EOP

cat > /etc/chef/first-boot.json <<EOP
<%= Chef::JSONCompat.to_json(first_boot) %>
EOP

<% unless client_d.empty? -%>
mkdir -p /etc/chef/client.d
<%= client_d %>
<% end -%>

echo "Starting the first Chef Client run..."

<%= start_chef %>'
