bash -l -c '
<%= "export http_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

RUBY_VER=2.2.4
BUILT_CHEF_TGZ=http://n1nj4net-public.s3-website-us-west-2.amazonaws.com/raspbian-opt_chef-201601.tgz

if [ ! -f /usr/bin/chef-client ]; then
  apt-get update
  apt-get purge ruby1.9 -y
  apt-get install -y curl wget git autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev ntpdate

  ntpdate -u pool.ntp.org

if [ ! -d /opt/chef ] ; then
  pushd .
  cd /
  # Change to true to use a prebuilt (by @dayne) /opt/chef
  if false; then
    echo "downloading pre-built raspbian-opt_chef ruby for /opt/chef"
    curl $BUILT_CHEF_TGZ | tar xz
  else
    false
  fi
  if [ $? != 0 ]; then
    echo "curl of raspbian-opt_chef failed - using ruby build instead"
    if [ ! -d /usr/local/src/ruby-build ]; then
      echo "installing ruby-build"
      git clone https://github.com/rbenv/ruby-build.git /usr/local/src/ruby-build
      cd /usr/local/src/ruby-build
      ./install.sh
    fi
    mkdir -p /opt/chef
    if [ ! -f /opt/chef/bin/ruby ]; then
      echo "installing ruby $RUBY_VER into /opt/chef using ruby-build"
      /usr/local/bin/ruby-build $RUBY_VER /opt/chef
    fi
  fi
  popd
fi


fi

PATH=/opt/chef/bin:$PATH
export PATH

gem install moneta --no-rdoc --no-ri --verbose
gem install net-ssh-gateway --no-rdoc --no-ri --verbose
gem install net-ssh --no-rdoc --no-ri --verbose
gem install ohai --no-rdoc --no-ri --verbose
gem install chef --no-rdoc --no-ri --verbose

mkdir -p /etc/chef

if [ ! -f /usr/local/bin/chef-client ]; then
  ln -s /opt/chef/bin/chef-client /usr/local/bin/
fi

<% if validation_key %>
(
cat <<'EOP'
<%= validation_key %>
EOP
) > /tmp/validation.pem
awk NF /tmp/validation.pem > /etc/chef/validation.pem
rm /tmp/validation.pem
chmod 0600 /etc/chef/validation.pem
<% end -%>

<% if client_pem %>

cat > /etc/chef/client.pem <<'EOP'
<%= ::File.read(::File.expand_path(client_pem)) %>
EOP
chmod 0600 /etc/chef/client.pem
<% end %>

<% if @chef_config[:encrypted_data_bag_secret] -%>
(
cat <<'EOP'
<%= encrypted_data_bag_secret %>
EOP
) > /tmp/encrypted_data_bag_secret
awk NF /tmp/encrypted_data_bag_secret > /etc/chef/encrypted_data_bag_secret
rm /tmp/encrypted_data_bag_secret
chmod 0600 /etc/chef/encrypted_data_bag_secret
<% end -%>

<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
mkdir -p /etc/chef/ohai/hints

<% @chef_config[:knife][:hints].each do |name, hash| -%>
(
cat <<'EOP'
<%= hash.to_json %>
EOP
) > /etc/chef/ohai/hints/<%= name %>.json
<% end -%>
<% end -%>

(
cat <<'EOP'
<%= config_content %>
EOP
) > /etc/chef/client.rb

<% if @chef_config[:trusted_certs_dir] -%>
mkdir -p /etc/chef/trusted_certs
<%= trusted_certs_content %>
<% end -%>

(
cat <<'EOP'
<%= first_boot.to_json %>
EOP
) > /etc/chef/first-boot.json

<%= start_chef %>'
